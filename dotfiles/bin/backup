#!/usr/bin/env bash

# Save directory into the archive and copy archive on remote host
# Dump structure and contents of MySQL database
# Add regular backup into user crontab
#
# Usage:
#   backup
#   backup --init
#   backup --cron <hourly|daily|weekly|monthly>
#
# Author: Alexander Burtsev, http://burtsev.me
# License: MIT
# https://github.com/albburtsev/devbox
# 
# Acknowledgements: Artem Sapegin, https://github.com/sapegin/dotfiles
#
# Links:
#   http://www.webdav.org/specs/rfc2518.html
#

# Common stuff
RED="$(tput setaf 1)"
CYAN="$(tput setaf 6)"
UNDERLINE="$(tput sgr 0 1)"
NOCOLOR="$(tput sgr0)"

function header() { echo -e "$UNDERLINE$CYAN$1$NOCOLOR"; }
function error() { echo -e "$UNDERLINE$RED$1$NOCOLOR\n"; }

function usage() {
	echo "Usage:"
	echo "  `basename $0`"
	echo "  `basename $0` --init"
	echo "  `basename $0` --cron <hourly|daily|weekly|monthly>"
	echo
}

function create_webdav_config() {
	header "Create webdav config for remote saving"
	read -p "Webdav host (default: https://webdav.yandex.ru/): " webdav_host
	read -p "Webdav user: " webdav_user
	read -p "Webdav password: " -s webdav_password
	echo

	webdav_host=${webdav_host:-https://webdav.yandex.ru/}

	touch $webdav_config
	echo "webdav_host=$webdav_host" >> $webdav_config
	echo "webdav_user=$webdav_user" >> $webdav_config
	echo "webdav_password=$webdav_password" >> $webdav_config
}

function save_archive() {
	if [ ! -f $webdav_config ]; then
		exit 1
	fi

	header "Saving to remote host."
	source $webdav_config
	curl --user $webdav_user":"$webdav_password --request MKCOL $webdav_host"backup/" >/dev/null 2>&1
	curl --user $webdav_user":"$webdav_password --request MKCOL $webdav_host"backup/"$wd_name >/dev/null 2>&1
	error_text=`curl -s --user $webdav_user":"$webdav_password -T "$1" $webdav_host"backup/"$wd_name"/"`

	if [ "$error_text" != "" ]; then
		error "ERROR: $error_text"
		exit 1
	fi

	rm $1
}

# Archive & config names
wd_name=${PWD##*/}
webdav_config=~/.webdav
archive_suffix=`date "+%Y-%m-%d-%H-%M-%S"`
archive_name=$wd_name"_"$archive_suffix".tar.gz"

# Create config file
if [ "$1" == "--init" ]; then
	if [ ! -f $webdav_config ]; then
		create_webdav_config
	fi

# Add backup into user crontab
elif [ "$1" == "--cron" ]; then
	# todo: add backup into user crontab
	echo

# Create backup
else
	if [ ! -f $webdav_config ]; then
		header "Webdav config for remote saving doesnâ€™t exist. Try: `basename $0` --init\n"
	fi

	if [ -f .backup_config ]; then
		echo "Config exists"

	else
		header "Creating an archive"
		tar -cz --file="$archive_name" -C .. "$wd_name" 2>/dev/null
		echo -e "Archive saved.\n"
		save_archive $archive_name
		echo "Done."
	fi
fi